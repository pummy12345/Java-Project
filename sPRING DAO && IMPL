package com.luv2code.cruddemo.dao;
import java.util.List;

import com.luv2code.cruddemo.entity.*;

public interface StudentDAO {
	void save(Student theStudent);
	 Student findById(Integer id);
	 List<Student>findAll();
	 void update(Student theStudent);
	 
	 void delete(Integer id);

	    int deleteAll();

}
package com.luv2code.cruddemo.dao;

import com.luv2code.cruddemo.entity.Student;
import jakarta.persistence.EntityManager;
import jakarta.persistence.*;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

@Repository
public   class StudentDAOImpl implements StudentDAO {

    // define field for entity manager
    private EntityManager entityManager;

    // inject entity manager using constructor injection
    @Autowired
    public StudentDAOImpl(EntityManager entityManager) {
        this.entityManager = entityManager;
    }

    // implement save method
    @Override
    @Transactional
    public void save(Student theStudent) {
        entityManager.persist(theStudent);
    }

    @Override
    public Student findById(Integer id) {
        return entityManager.find(Student.class, id);
    }
    @Override
    public  List<Student>findAll()
    {
    	TypedQuery<Student> theQuery=entityManager.createQuery("FROM Student order by lastName desc",Student.class);
    	return theQuery.getResultList();
    	
    }
    @Override
    @Transactional
     public void update(Student theStudent)
     {
    	entityManager.merge(theStudent);
    	
    	
     }

    @Override
    @Transactional
    public void delete(Integer id) {

        // retrieve the student
        Student theStudent = entityManager.find(Student.class, id);

        // delete the student
        entityManager.remove(theStudent);
    }

    @Override
    @Transactional
    public int deleteAll() {

        int numRowsDeleted = entityManager.createQuery("DELETE FROM Student").executeUpdate();

        return numRowsDeleted;
    }
}











