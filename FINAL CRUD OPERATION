package com.luv2code.cruddemo;

import org.springframework.boot.SpringApplication;
import com.luv2code.cruddemo.dao.StudentDAO;
import com.luv2code.cruddemo.entity.Student;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import java.util.*;
import org.springframework.context.annotation.Bean;
import org.springframework.boot.CommandLineRunner;
@SpringBootApplication
public class CruddemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(CruddemoApplication.class, args);
	}
	@Bean
	public CommandLineRunner commandLineRunner(StudentDAO studentDAO)
	{
		return runner -> {
		
			// createStudent(studentDAO);

						// createMultipleStudents(studentDAO);

						// readStudent(studentDAO);

						// queryForStudents(studentDAO);

						// queryForStudentsByLastName(studentDAO);

						// updateStudent(studentDAO);

						// deleteStudent(studentDAO);

						deleteAllStudents(studentDAO);

		};
	}
	private void update(StudentDAO studentDAO)
	{
		int id=1;
		System.out.println("Generating student with id:"+id);
		Student mystudent= studentDAO.findById(id);
		System.out.println( "Updating Student...");
		mystudent.setFirstName("Pummy");
		studentDAO.update(mystudent);
		System.out.println("Updated Student:"+mystudent);
	}
	private void queryFor(StudentDAO studentDAO)
	{
		List<Student> theStudents=studentDAO.findAll();
		for(Student tempStudent: theStudents)
		{
			System.out.println(tempStudent);
		}
	}
	private void readStudent(StudentDAO studentDAO)
	
	{
		System.out.println("Creating new student object...");
		Student tempStudent= new Student(" Daffy","Duck","pummys480@gmail.com");
		System.out.println("Saving the Student...");
		studentDAO.save(tempStudent);
		int id= tempStudent.getId();
		System.out.println("Saved Student.Generated id:"+id);
		
		System.out.println("Retrieving Student with the id:"+id);
		Student myStudent=studentDAO.findById(id);
		System.out.println("Found the student:"+myStudent);
	}

	private void createMultipleStudents(StudentDAO studentDAO) {

		// create multiple students
		System.out.println("Creating 3 student objects ...");
		Student tempStudent1 = new Student("John", "Doe", "john@luv2code.com");
		Student tempStudent2 = new Student("Mary", "Public", "mary@luv2code.com");
		Student tempStudent3 = new Student("Bonita", "Applebum", "bonita@luv2code.com");

		// save the student objects
		System.out.println("Saving the students ...");
		studentDAO.save(tempStudent1);
		studentDAO.save(tempStudent2);
		studentDAO.save(tempStudent3);
	}

	private void createStudent(StudentDAO studentDAO) {

		// create the student object
		System.out.println("Creating new student object ...");
		Student tempStudent = new Student("Paul", "Doe", "paul@luv2code.com");

		// save the student object
		System.out.println("Saving the student ...");
		studentDAO.save(tempStudent);

		// display id of the saved student
		System.out.println("Saved student. Generated id: " + tempStudent.getId());
	}
	private void deleteAllStudents(StudentDAO studentDAO) {

		System.out.println("Deleting all students");
		int numRowsDeleted = studentDAO.deleteAll();
		System.out.println("Deleted row count: " + numRowsDeleted);
	}

	private void deleteStudent(StudentDAO studentDAO) {

		int studentId = 3;
		System.out.println("Deleting student id: " + studentId);
		studentDAO.delete(studentId);
	}

     }
